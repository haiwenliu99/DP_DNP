#######说明文档######
##DP_DNP实现过程介绍##

lib：包括使用到的相关jar包，weka.jar包来进行数据预处理，Apache commons-maths.jar包可以进行简单的数据统计分析，jfreechart.jar是JAVA平台上的一个开放的图表绘制类库
dataset：数据集，本文使用的是选取的是斯坦福大学SNAP图形数据库中的两个真实的动态网络数据集AS-733和AS-Caida，由于文件解压后过大，进行了压缩，可解压。
pretreatment：数据预处理部分，进行动态网络划分，包括蓄水池抽样reservoirSample和HED图相似度匹配方法hausdorffDistance
gcad：算法在进行了pretreatment预处理后进行的动态网络社区发现执行过程
hrg：层次随机图部分,我们利用了GitHub上一个开源的HRG的构建与合并的Python脚本
mechanisms：指数机制，Laplace机制的实现类
util：工具类部分，进行网络图处理的工具类MapUtil类和通用的数据处理类CommonUtility类，用于绘图的JFreeCharUtil类
main：主函数，包括DP_DNP算法的完整处理过程
test：测试函数

#############################################################
目前数据发布隐私保护的研究大都是基于静态网络开展的，针对动态网络数据发布的关注度较少，虽然近年来关于动态网络数据发布的研究在增多，但是发布的网络净化图的网络结构还原度比较差，数据可用性较低，不利于后期进行数据发掘与分析。基于这一观察，本文对动态网络的数据发布进行了初步的研究，目的是提高数据发布的可用性，保留原始图的网络结构特征。本文为应对动态网络数据发布数据可用性较低，网络结构还原较差的问题，提出了面向动态网络数据发布的差分隐私方法DP_DNP，现对本文工作进行总结。

（1）与静态网络比较，动态网络数据是随时间的变化而动态变化的。为应对动态网络这一动态性。提出了基于滑动窗口的动态网络划分方法来进行数据预处理，除了进行滑动窗口划分，还利用蓄水池抽样和HED图相似度匹配方法进行图筛选，降低算法的时间复杂度。

（2）结合博弈论进行动态网络社区发现，提出了面向博弈论的动态网络社区发现方法GCAD，之所以提出这一方法，是因为在经过滑动窗口划分和图相似度预处理后，如果直接进行隐私保护处理噪声量可能会过大，所以在进行隐私保护处理前，为减少噪声量的添加，本文对预处理筛选出的快照图的网络数据进行了社区发现。将社区发现的结果作为输入，构建HRG。

（3）最后对HRG添加噪声，对添加噪声后的HRG进行矩阵转换，转换为下三角矩阵，计算其平均值，将得到下三角均值矩阵还原最初的网络图并发布。实验验证了本文所提DP_DNP算法是可行且有效的。

论文仍存在部分可以优化的地方。如动态网络划分方法中，蓄水池抽样可以进行进一步优化来提高对动态网络数据的筛选准确度和计算速度，关于隐私预算的分配可以尝试自适应的机制来动态分配。在不影响差分隐私保护的前提下，如何进一步提高DP_DNP算法的计算效率和提高网络结构的还原度是今后讨论和研究的方向之一。
#############################################################